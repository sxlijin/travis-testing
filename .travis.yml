language: cpp
sudo: false

# https://github.com/travis-ci/apt-source-whitelist/blob/master/ubuntu.json

env:
  - TMP_DIR="$(mktemp -d)"

matrix:
  allow_failures:
    - fail_allowed: true

  include:
    - os: linux
      addons:
        apt:
          packages:
            - gcc
            - clang
      env:
        - MATRIX_EVAL="CC=gcc && CXX=g++"
      fail_allowed: true

    - os: linux
      addons:
        apt:
          packages:
            - clang
      env:
        - MATRIX_EVAL="CC=clang && CXX=clang++"
      fail_allowed: true

    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-precise-3.6
          packages:
            - clang-3.6
      env:
        - MATRIX_EVAL="CC=clang && CXX=clang++ && V=3.6"

    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-precise-3.7
          packages:
            - clang-3.7
      env:
        - MATRIX_EVAL="CC=clang && CXX=clang++ && V=3.7"

    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-precise-3.8
          packages:
            - clang-3.8
      env:
        - MATRIX_EVAL="CC=clang && CXX=clang++ && V=3.8"

    - os: linux
      dist: trusty
      addons:
        apt:
          sources:
            - llvm-toolchain-precise-3.8
          packages:
            - clang-3.8
      env:
        - MATRIX_EVAL="CC=clang && CXX=clang++ && V=3.8"

    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-precise-3.9
          packages:
            - clang-3.9
      env:
        - MATRIX_EVAL="CC=clang && CXX=clang++ && V=3.9"

    - os: linux
      dist: trusty
      addons:
        apt:
          sources:
            - llvm-toolchain-trusty-3.9
          packages:
            - clang-3.9
      env:
        - MATRIX_EVAL="CC=clang && CXX=clang++ && V=3.9"

    - os: linux
      dist: trusty
      addons:
        apt:
          sources:
            - llvm-toolchain-trusty-4.0
          packages:
            - clang-4.0
      env:
        - MATRIX_EVAL="CC=clang && CXX=clang++ && V=4.0"

    - os: linux
      dist: trusty
      addons:
        apt:
          sources:
            - llvm-toolchain-trusty
          packages:
            - clang-5.0
      env:
        - MATRIX_EVAL="CC=clang && CXX=clang++ && V=5.0"

    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-precise-3.9
          packages:
            - g++-4.9
            - clang-3.9
      env:
         - MATRIX_EVAL="CC=gcc && CXX=g++ && V=4.9 && SCAN_V=3.9"

    - os: linux
      dist: trusty
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-trusty
          packages:
            - g++-4.9
            - clang-5.0
      env:
         - MATRIX_EVAL="CC=gcc && CXX=g++ && V=4.9 && SCAN_V=5.0"

    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-precise-3.9
          packages:
            - g++-5
      env:
         - MATRIX_EVAL="CC=gcc && CXX=g++ && V=4.9 && SCAN_V=3.9"

    - os: linux
      dist: trusty
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-trusty
          packages:
            - g++-5
      env:
         - MATRIX_EVAL="CC=gcc && CXX=g++ && V=5 && SCAN_V=5.0"

    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-precise-3.9
          packages:
            - g++-6
      env:
         - MATRIX_EVAL="CC=gcc && CXX=g++ && V=6 && SCAN_V=3.9"

    - os: linux
      dist: trusty
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-trusty
          packages:
            - g++-6
      env:
         - MATRIX_EVAL="CC=gcc && CXX=g++ && V=6 && SCAN_V=5.0"

    - os: osx
      fail_allowed: true

    - os: osx
      osx_image: xcode8
      env:
        - MATRIX_EVAL="CC=gcc && CXX=g++ && V=4.9"

    - os: osx
      osx_image: xcode8
      env:
        - MATRIX_EVAL="brew install gcc5 && CC=gcc && CXX=g++ && V=5"

    - os: osx
      osx_image: xcode8
      env:
        - MATRIX_EVAL="brew install gcc && CC=gcc && CXX=g++ && V=6"

before_install:
  # update envvar config
  - |
    echo "Setting envvars..."
    eval ${MATRIX_EVAL}
    function get_v     { test -v V      && echo -${V} || true; }
    function get_scanv { test -v SCAN_V && echo -${SCAN_V} || get_v; }
    CC="${CC}$(  get_v)"
    CXX="${CXX}$(get_v)"
    SCAN_BUILD="scan-build$(get_scanv)"
    SCAN_VIEW="scan-view$(get_scanv)"

  # report versions
  - |
    echo "Expand this to see tooling versions..."
    echo "CC: ${CC}"
    echo "CXX: ${CXX}"
    echo "SCAN_BUILD: ${SCAN_BUILD}"
    echo "SCAN_VIEW: ${SCAN_VIEW}"
    echo "TMP_DIR: ${TMP_DIR}"
    $CC         --version
    $CXX        --version
    true

script:
  - ${CC} main.c -o c-bin
  - ${CXX} main.cpp -o cpp-bin
  - ${SCAN_BUILD} -o ${TMP_DIR} ${CC} main.c -o c-bin && ${SCAN_VIEW} ${TMP_DIR}
  - ${SCAN_BUILD} -o ${TMP_DIR} ${CXX} main.cpp -o cpp-bin && ${SCAN_VIEW} ${TMP_DIR}

after_success:
  - echo "Executing C binary:" && ./c-bin
  - echo "Executing C++ binary:" && ./cpp-bin
